// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @unique @default(uuid())
  name      String
  email     String
  password  String
  role      Role     @default(Admin)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        String    @id @unique @default(uuid())
  name      String
  product   Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id                String              @id @unique @default(uuid())
  name              String
  price             Int
  image             String
  category          Category            @relation(fields: [categoryId], references: [id])
  categoryId        String
  stock             Int
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  TransactionDetail TransactionDetail[]
}

model Transaction {
  id                 String              @id @unique @default(uuid())
  name               String
  email              String
  status             StatusTransaction
  paymentMethod      PaymentMethod
  totalQuantity      Int
  totalAmount        Int
  settlementTime     String?
  signatureKey       String?
  serialNumber       Int                 @unique @default(autoincrement())
  transactionDetails TransactionDetail[]
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  History            History[]
  Income             Income[]
}

model TransactionDetail {
  id            String      @id @unique @default(uuid())
  productId     String
  quantity      Int
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  product       Product     @relation(fields: [productId], references: [id])
  transactionId String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Income {
  id            String      @id @unique @default(uuid())
  nominal       Int
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  transactionId String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model History {
  id            String            @id @unique @default(uuid())
  transaction   Transaction       @relation(fields: [transactionId], references: [id])
  status        StatusTransaction
  transactionId String
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
}

enum Role {
  Admin
  Owner
}

enum StatusTransaction {
  PAID
  UNPAID
  PROCESS_BY_KITCHEN
}

enum PaymentMethod {
  QRIS
  CASH
}
