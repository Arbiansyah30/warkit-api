// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @unique @default(uuid())
  name      String
  email     String
  password  String
  role      Role     @default(Admin)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        String    @id @unique @default(uuid())
  name      String
  product   Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id          String        @id @unique @default(uuid())
  name        String
  price       Int
  image       String
  category    Category      @relation(fields: [categoryId], references: [id])
  categoryId  String
  stock       Int
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Transaction Transaction[]
}

model Customer {
  id           String        @id @unique @default(uuid())
  name         String
  email        String
  number_phone Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  Transaction  Transaction[]
}

model Transaction {
  id             String             @id @unique @default(uuid())
  customer       Customer           @relation(fields: [customerId], references: [id])
  customerId     String
  total_amount   Decimal
  product        Product            @relation(fields: [productId], references: [id])
  quantity       Int
  payment_method Payment_Method     @default(null)
  productId      String
  status         Status_Transaction
  createdAt      DateTime           @default(now())
  updatedAt      DateTime           @updatedAt
}

model Income {
  id        String   @id @unique @default(uuid())
  nominal   Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  Admin
  Owner
}

enum Status_Transaction {
  PAID
  UNPAID
}

enum Payment_Method {
  QRIS
  MANDIRI
  BCA
  CASH
  null
}

model Transaction {
  id              String              @id @unique @default(uuid())
  name            String
  totalQty        Int
  totalAmount     Int
  transactionDetails TransactionDetail[]
  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt
}

model TransactionDetail {
  id           String   @id @unique @default(uuid())
  productId    String
  qty          Int
  amount       Int
  transaction  Transaction @relation(fields: [transactionId], references: [id])
  transactionId String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}
